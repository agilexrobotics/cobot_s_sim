<?xml version="1.0"?>
<launch>
  <arg name="paused" default="false"/>
  <arg name="gazebo_gui" default="true"/>
  <arg name="initial_joint_positions" doc="Initial joint configuration of the robot"
       default=" -J joint1 0 -J joint2 0 -J joint3 0 -J joint4 0 -J joint5 0 -J joint6 0 -J joint7 0"/>

  <!-- startup simulated world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" default="worlds/empty.world"/>
    <arg name="paused" value="true"/>
    <arg name="gui" value="$(arg gazebo_gui)"/>
  </include>

  <!-- send robot urdf to param server -->
  <param name="robot_description" command="xacro --inorder '$(find cobot_description)/urdf/cobot_description_nogripper.urdf.xacro'" />

  <!-- unpause only after loading robot model -->
  <arg name="unpause" value="$(eval '' if arg('paused') else '-unpause')" />
  <!-- push robot_description to factory and spawn robot in gazebo at the origin, change x,y,z arguments to spawn in a different position -->
  <arg name="world_pose" value="-x 0 -y 0 -z 2" />
  <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model robot $(arg unpause) $(arg world_pose) $(arg initial_joint_positions)"
    respawn="false" output="screen" />

  <!-- Load joint controller parameters for Gazebo -->
  <rosparam file="$(find cobot_moveit_config)/config/gazebo_controllers.yaml" />
  <rosparam file="$(find dh_ag95_description)/launch/controller.yaml" command="load" />

  <!-- Spawn Gazebo ROS controllers -->
  <node name="gazebo_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="joint_state_controller" />
  <!-- Load ROS controllers -->
  <include file="$(dirname)/ros_controllers.launch"/>

  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find ranger_mini_control)/config/controller_v2.yaml" command="load"/>

  <!-- load the controllers -->
  <node name="controller_spawner" pkg="controller_manager"
		type="spawner" output="screen" 
		args="four_wheel_steering_controller arm_joint_controller gripper_controller pan_tilt_yaw_joint_controller pan_tilt_pitch_joint_controller">
  </node>

  <!-- convert joint states to TF transforms for rviz, etc -->
  <node name="robot_state_publisher" pkg="robot_state_publisher"
		type="robot_state_publisher" respawn="false" output="screen">
  </node>

        <node pkg="rqt_robot_steering" type="rqt_robot_steering" name="rqt_robot_steering" >
        <param name="default_topic" value="/four_wheel_steering_controller/cmd_vel"/>                        
        <param name="default_vx_max" value="5.0"/>                        
        <param name="default_vx_min" value="-5.0"/>                       
        <param name="default_vw_max" value="3.69"/>                  
        <param name="default_vw_min" value="-3.69"/>                  
        </node>
</launch>
